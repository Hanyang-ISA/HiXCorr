// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spectrum.proto

#ifndef PROTOBUF_spectrum_2eproto__INCLUDED
#define PROTOBUF_spectrum_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_spectrum_2eproto();
void protobuf_AssignDesc_spectrum_2eproto();
void protobuf_ShutdownFile_spectrum_2eproto();

class Spectrum;

// ===================================================================

class Spectrum : public ::google::protobuf::Message {
 public:
  Spectrum();
  virtual ~Spectrum();

  Spectrum(const Spectrum& from);

  inline Spectrum& operator=(const Spectrum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Spectrum& default_instance();

  void Swap(Spectrum* other);

  // implements Message ----------------------------------------------

  Spectrum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Spectrum& from);
  void MergeFrom(const Spectrum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 peak_m_z = 1 [packed = true];
  inline int peak_m_z_size() const;
  inline void clear_peak_m_z();
  static const int kPeakMZFieldNumber = 1;
  inline ::google::protobuf::int64 peak_m_z(int index) const;
  inline void set_peak_m_z(int index, ::google::protobuf::int64 value);
  inline void add_peak_m_z(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      peak_m_z() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_peak_m_z();

  // repeated int64 peak_intensity = 2 [packed = true];
  inline int peak_intensity_size() const;
  inline void clear_peak_intensity();
  static const int kPeakIntensityFieldNumber = 2;
  inline ::google::protobuf::int64 peak_intensity(int index) const;
  inline void set_peak_intensity(int index, ::google::protobuf::int64 value);
  inline void add_peak_intensity(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      peak_intensity() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_peak_intensity();

  // optional int32 peak_m_z_denominator = 3;
  inline bool has_peak_m_z_denominator() const;
  inline void clear_peak_m_z_denominator();
  static const int kPeakMZDenominatorFieldNumber = 3;
  inline ::google::protobuf::int32 peak_m_z_denominator() const;
  inline void set_peak_m_z_denominator(::google::protobuf::int32 value);

  // optional int32 peak_intensity_denominator = 4;
  inline bool has_peak_intensity_denominator() const;
  inline void clear_peak_intensity_denominator();
  static const int kPeakIntensityDenominatorFieldNumber = 4;
  inline ::google::protobuf::int32 peak_intensity_denominator() const;
  inline void set_peak_intensity_denominator(::google::protobuf::int32 value);

  // optional int32 spectrum_number = 5;
  inline bool has_spectrum_number() const;
  inline void clear_spectrum_number();
  static const int kSpectrumNumberFieldNumber = 5;
  inline ::google::protobuf::int32 spectrum_number() const;
  inline void set_spectrum_number(::google::protobuf::int32 value);

  // optional double precursor_m_z = 6;
  inline bool has_precursor_m_z() const;
  inline void clear_precursor_m_z();
  static const int kPrecursorMZFieldNumber = 6;
  inline double precursor_m_z() const;
  inline void set_precursor_m_z(double value);

  // optional double rtime = 8;
  inline bool has_rtime() const;
  inline void clear_rtime();
  static const int kRtimeFieldNumber = 8;
  inline double rtime() const;
  inline void set_rtime(double value);

  // repeated int32 charge_state = 7 [packed = true];
  inline int charge_state_size() const;
  inline void clear_charge_state();
  static const int kChargeStateFieldNumber = 7;
  inline ::google::protobuf::int32 charge_state(int index) const;
  inline void set_charge_state(int index, ::google::protobuf::int32 value);
  inline void add_charge_state(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      charge_state() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_charge_state();

  // @@protoc_insertion_point(class_scope:pb.Spectrum)
 private:
  inline void set_has_peak_m_z_denominator();
  inline void clear_has_peak_m_z_denominator();
  inline void set_has_peak_intensity_denominator();
  inline void clear_has_peak_intensity_denominator();
  inline void set_has_spectrum_number();
  inline void clear_has_spectrum_number();
  inline void set_has_precursor_m_z();
  inline void clear_has_precursor_m_z();
  inline void set_has_rtime();
  inline void clear_has_rtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > peak_m_z_;
  mutable int _peak_m_z_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > peak_intensity_;
  mutable int _peak_intensity_cached_byte_size_;
  ::google::protobuf::int32 peak_m_z_denominator_;
  ::google::protobuf::int32 peak_intensity_denominator_;
  double precursor_m_z_;
  double rtime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > charge_state_;
  mutable int _charge_state_cached_byte_size_;
  ::google::protobuf::int32 spectrum_number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_spectrum_2eproto();
  friend void protobuf_AssignDesc_spectrum_2eproto();
  friend void protobuf_ShutdownFile_spectrum_2eproto();

  void InitAsDefaultInstance();
  static Spectrum* default_instance_;
};
// ===================================================================


// ===================================================================

// Spectrum

// repeated int64 peak_m_z = 1 [packed = true];
inline int Spectrum::peak_m_z_size() const {
  return peak_m_z_.size();
}
inline void Spectrum::clear_peak_m_z() {
  peak_m_z_.Clear();
}
inline ::google::protobuf::int64 Spectrum::peak_m_z(int index) const {
  return peak_m_z_.Get(index);
}
inline void Spectrum::set_peak_m_z(int index, ::google::protobuf::int64 value) {
  peak_m_z_.Set(index, value);
}
inline void Spectrum::add_peak_m_z(::google::protobuf::int64 value) {
  peak_m_z_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Spectrum::peak_m_z() const {
  return peak_m_z_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Spectrum::mutable_peak_m_z() {
  return &peak_m_z_;
}

// repeated int64 peak_intensity = 2 [packed = true];
inline int Spectrum::peak_intensity_size() const {
  return peak_intensity_.size();
}
inline void Spectrum::clear_peak_intensity() {
  peak_intensity_.Clear();
}
inline ::google::protobuf::int64 Spectrum::peak_intensity(int index) const {
  return peak_intensity_.Get(index);
}
inline void Spectrum::set_peak_intensity(int index, ::google::protobuf::int64 value) {
  peak_intensity_.Set(index, value);
}
inline void Spectrum::add_peak_intensity(::google::protobuf::int64 value) {
  peak_intensity_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Spectrum::peak_intensity() const {
  return peak_intensity_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Spectrum::mutable_peak_intensity() {
  return &peak_intensity_;
}

// optional int32 peak_m_z_denominator = 3;
inline bool Spectrum::has_peak_m_z_denominator() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Spectrum::set_has_peak_m_z_denominator() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Spectrum::clear_has_peak_m_z_denominator() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Spectrum::clear_peak_m_z_denominator() {
  peak_m_z_denominator_ = 0;
  clear_has_peak_m_z_denominator();
}
inline ::google::protobuf::int32 Spectrum::peak_m_z_denominator() const {
  return peak_m_z_denominator_;
}
inline void Spectrum::set_peak_m_z_denominator(::google::protobuf::int32 value) {
  set_has_peak_m_z_denominator();
  peak_m_z_denominator_ = value;
}

// optional int32 peak_intensity_denominator = 4;
inline bool Spectrum::has_peak_intensity_denominator() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Spectrum::set_has_peak_intensity_denominator() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Spectrum::clear_has_peak_intensity_denominator() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Spectrum::clear_peak_intensity_denominator() {
  peak_intensity_denominator_ = 0;
  clear_has_peak_intensity_denominator();
}
inline ::google::protobuf::int32 Spectrum::peak_intensity_denominator() const {
  return peak_intensity_denominator_;
}
inline void Spectrum::set_peak_intensity_denominator(::google::protobuf::int32 value) {
  set_has_peak_intensity_denominator();
  peak_intensity_denominator_ = value;
}

// optional int32 spectrum_number = 5;
inline bool Spectrum::has_spectrum_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Spectrum::set_has_spectrum_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Spectrum::clear_has_spectrum_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Spectrum::clear_spectrum_number() {
  spectrum_number_ = 0;
  clear_has_spectrum_number();
}
inline ::google::protobuf::int32 Spectrum::spectrum_number() const {
  return spectrum_number_;
}
inline void Spectrum::set_spectrum_number(::google::protobuf::int32 value) {
  set_has_spectrum_number();
  spectrum_number_ = value;
}

// optional double precursor_m_z = 6;
inline bool Spectrum::has_precursor_m_z() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Spectrum::set_has_precursor_m_z() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Spectrum::clear_has_precursor_m_z() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Spectrum::clear_precursor_m_z() {
  precursor_m_z_ = 0;
  clear_has_precursor_m_z();
}
inline double Spectrum::precursor_m_z() const {
  return precursor_m_z_;
}
inline void Spectrum::set_precursor_m_z(double value) {
  set_has_precursor_m_z();
  precursor_m_z_ = value;
}

// optional double rtime = 8;
inline bool Spectrum::has_rtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Spectrum::set_has_rtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Spectrum::clear_has_rtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Spectrum::clear_rtime() {
  rtime_ = 0;
  clear_has_rtime();
}
inline double Spectrum::rtime() const {
  return rtime_;
}
inline void Spectrum::set_rtime(double value) {
  set_has_rtime();
  rtime_ = value;
}

// repeated int32 charge_state = 7 [packed = true];
inline int Spectrum::charge_state_size() const {
  return charge_state_.size();
}
inline void Spectrum::clear_charge_state() {
  charge_state_.Clear();
}
inline ::google::protobuf::int32 Spectrum::charge_state(int index) const {
  return charge_state_.Get(index);
}
inline void Spectrum::set_charge_state(int index, ::google::protobuf::int32 value) {
  charge_state_.Set(index, value);
}
inline void Spectrum::add_charge_state(::google::protobuf::int32 value) {
  charge_state_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Spectrum::charge_state() const {
  return charge_state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Spectrum::mutable_charge_state() {
  return &charge_state_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_spectrum_2eproto__INCLUDED
